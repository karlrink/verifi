#!/usr/bin/env python3

import time
from http.server import HTTPServer, BaseHTTPRequestHandler

import threading

PORT_NUMBER = 9181

gData = {}
sigterm = False

class Handler(BaseHTTPRequestHandler):
    def do_GET(self):
        if self.path == '/metrics':
            self.send_response(200)
            self.send_header("Content-type", "text/html; charset=utf-8")
            self.end_headers()
            self.wfile.write(bytes('hello world \n','utf-8'))
            self.wfile.write(bytes(self.path + ' \n','utf-8'))
            self.wfile.write(bytes(str(gData) + str(' \n'),'utf-8'))
            self.wfile.write(bytes(str(self.command),'utf-8'))
            #self.wfile.write(b'close')
            #self.wfile.write("<html><head><title>Title goes here.</title></head>")
        else:
            self.send_error(404) #404 Not Found
        return

    def do_POST(self):
        self.send_error(405) #405 Method Not Allowed
        return

import random
def processD():
    val = random.random()
    gData[0] = val
    
def ticker():
    while (sigterm == False):
        processD()
        time.sleep(15)

if __name__ == '__main__':

    watcher = threading.Thread(target=ticker, name="ticker")
    watcher.setDaemon(1)
    watcher.start()

    print(str(time.asctime()) + " Server Start - " + str(PORT_NUMBER))
    httpd = HTTPServer(('', PORT_NUMBER), Handler)
    try:
        httpd.serve_forever()
    except KeyboardInterrupt:
        sigterm == True

    httpd.server_close()
    print(str(time.asctime()) + " Server Stop - " + str(PORT_NUMBER))



